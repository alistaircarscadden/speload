/**
 The Block Class
 deals with each individual block stored in the Level class (the world)
 parameters: type (what it looks like), value (what its actually worth)
 */
class Block {
    int type;
    boolean hidden; // It is still it's "type" but it will be drawn as dirt

    Block(int type) {
        this.type = type;
        if ((int) random(10) > 7)
            this.hidden = true;
        else
            this.hidden = false;
    }
    Block() {
        this.type = 1;
        this.hidden = false;
    }

    boolean hadHiddenValue() {
        return (this.type == this.value);
    }

    int r() {
        switch (this.type) {
        case 0:
            return 0;
            break;
        case 1:
            return 165;
            break;
        case 2:
            return 169;
            break;
        case 3:
            return 107;
            break;
        case 4:
            return 128;
            break;
        case 5:
            return 211;
            break;
        case 6:
            return 255;
            break;
        case 7:
            return 0;
            break;
        case 8:
            return 173;
            break;
        case 9:
            return 255;
            break;
        case 10:
            return 0;
            break;
        }
    }

    int g() {
        switch (this.type) {
        case 0:
            return 0;
            break;
        case 1:
            return 42;
            break;
        case 2:
            return 169;
            break;
        case 3:
            return 142;
            break;
        case 4:
            return 128;
            break;
        case 5:
            return 211;
            break;
        case 6:
            return 215;
            break;
        case 7:
            return 0;
            break;
        case 8:
            return 216;
            break;
        case 9:
            return 0;
            break;
        case 10:
            return 0;
            break;
        }
    }

    int b() {
        switch (this.type) {
        case 0:
            return 0;
            break;
        case 1:
            return 42;
            break;
        case 2:
            return 169;
            break;
        case 3:
            return 35;
            break;
        case 4:
            return 128;
            break;
        case 5:
            return 211;
            break;
        case 6:
            return 0;
            break;
        case 7:
            return 0;
            break;
        case 8:
            return 230;
            break;
        case 9:
            return 0;
            break;
        case 10:
            return 0;
            break;
        }
    }

    void drawBlock(int x_posInLayout, int y_posInLayout) {
        int x = x_posInLayout * BLOCK_SIZE;
        int y = y_posInLayout * BLOCK_SIZE;

        fill(r(), g(), b()); // all of that work for this :(
        rect(x, y, BLOCK_SIZE, BLOCK_SIZE);
    }
}
